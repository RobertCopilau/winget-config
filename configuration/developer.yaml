- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: AzureFunctionsCoreTools
  directives:
    description: Install Azure Functions Core Tools
    allowPrerelease: true
  settings:
    id: Microsoft.Azure.FunctionsCoreTools
    source: winget
    Ensure: Present
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: k9s
  directives:
    description: Install k9s
    allowPrerelease: true
  settings:
    id: Derailed.k9s
    source: winget
    Ensure: Present
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: DockerDesktop
  directives:
    description: Install Docker
    allowPrerelease: true
  settings:
    id: Docker.DockerDesktop
    source: winget
    Ensure: Present
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: KubeCtl
  directives:
    description: Install kubectl
    allowPrerelease: true
  settings:
    id: Kubernetes.kubectl
    source: winget
    Ensure: Present
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: SSMS
  directives:
    description: Install SQL Server Management Studio
    allowPrerelease: true
  settings:
    id: Microsoft.SQLServerManagementStudio
    source: winget
    Ensure: Present
- resource: PSDscResources/Script
  id: WSLInstall
  directives:
    description: Install WSL
  settings:
    GetScript: |
      $wslCommand = Get-Command wsl.exe -ErrorAction SilentlyContinue
      return @{
          Result = $wslCommand
      }
    TestScript: |
      $wslCommand = Get-Command wsl.exe -ErrorAction SilentlyContinue
      if ($wslCommand -eq $null) {
          return $false
      }else {
          return $true
      }
    SetScript: |
      Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux -NoRestart
      wsl --install
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: Slack
  directives:
    description: Install Slack
    allowPrerelease: true
  settings:
    id: SlackTechnologies.Slack
    source: winget
    Ensure: Present
- resource: Microsoft.WinGet.DSC/WinGetPackage
  id: VisualStudio2022Professional
  directives:
    description: Install Visual Studio Professional
    allowPrerelease: true
  settings:
    id: Microsoft.VisualStudio.2022.Professional
    source: winget
    Ensure: Present
- resource: Microsoft.VisualStudio.DSC/VSComponents
  id: VisualStudio2022ProfessionalComponents
  dependsOn:
    - VisualStudio2022Professional
  directives:
    description: Install required VS workloads from vsconfig file
    allowPrerelease: true
  settings:
    productId: Microsoft.VisualStudio.Product.Professional
    channelId: VisualStudio.17.Release
    components:
      [
        "Microsoft.VisualStudio.Workload.CoreEditor",
        "Microsoft.VisualStudio.Workload.Azure",
        "Microsoft.VisualStudio.Workload.NetWeb",
        "Microsoft.VisualStudio.Workload.Node",
      ]
    includeRecommended: true
    includeOptional: false
- resource: PSDscResources/Script
  id: installSqlServerScript
  directives:
    description: Install Microsoft SQLServer 2022 Developer
  settings:
    GetScript: |
      $instance = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server')
      return @{
          Result = $instance
      }
    TestScript: |
      $instance = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server')
      if ($instance -ne $null) { return $true } else { return $false }
    SetScript: |
      winget install Microsoft.SQLServer.2022.Developer
